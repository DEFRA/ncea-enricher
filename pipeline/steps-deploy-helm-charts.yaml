parameters:
  - name: envName
    type: string
  - name: releaseName
    type: string
  - name: aksServiceConnection
    type: string

steps:

- task: DownloadPipelineArtifact@2
  displayName: 'Download Helm Charts'
  condition: succeeded()
  inputs:
    buildType: 'current'
    artifact: charts

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Pipeline.Workspace)/charts/*.tgz'
    cleanDestinationFolder: true
    overwriteExistingFiles: true
    destinationFolder: '$(Pipeline.Workspace)/chart' 

- task: HelmDeploy@0
  displayName: 'Helm Deploy'
  condition: succeeded()
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: ${{ parameters.aksServiceConnection }}
    releaseName: ${{ parameters.releaseName }}
    namespace: $(aksNamespace)
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Pipeline.Workspace)/ncea-mapper-$(Build.BuildNumber).tgz'
    valueFile: $(Pipeline.Workspace)/chart/ncea-mapper/values/values.${{ parameters.envName }}.yaml
    overrideValues: |
        image.repository=$(containerRepositoryFullPath)
        image.tag=$(imageTag)
        serviceAccount.name=$(serviceAccountMapper)
        env.serviceBusHostName=$(serviceBusHostName)
        env.keyVaultUri=$(keyVaultUri)
    install: true
    force: true